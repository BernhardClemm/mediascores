% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_dgp.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate data according to the media score model's data generating process}
\usage{
simulate_data(n_users = 200, n_domains = 500, n_groups = 2,
  group_prob = c(0.4, 0.6), params = list(alpha_mu = 2, alpha_sigma =
  0.5, gamma_sigma = 0.75, theta_mu = c(-0.75, 0.5), theta_sigma = c(0.25,
  0.25), omega_user_shape = 5, omega_user_rate = 5, omega_domain_shape = 5,
  omega_domain_rate = 5))
}
\arguments{
\item{n_users, }{int, number of users in the data}

\item{n_domains, }{int, number of domains that users can share}

\item{n_groups, }{int, number of groups users can belong to}

\item{group_prob, }{numeric vector of length \code{n_groups} specifying the 
probability of a user belonging to each of the groups}

\item{params, }{list containing parameters of the model distributions. See 
Details section for more information [FILL IN]}
}
\value{
Returns a list with elements:
\itemize{
    \item \code{'Y'}: A matrix (n_users x n_domains) of simulated counts of
        times each user shared a domain
    \item \code{'group'}: Vector of length \code{n_users} indicating group
        membership of each user
    \item \code{'anchors'}: Index position (column in \code{'shares_data'})
        with the most extreme domains (minimum, maximum on latent scale)
    \item \code{'parameters'}: Simulated parameters:
    \itemize{
        \item \code{'alpha'}: Numeric vector of length \code{n_users}, 
            user-level intercepts
        \item \code{'gamma'}: Numeric vector of length \code{n_domains}, 
            domain-level intercepts
        \item \code{'theta'}: Numeric vector of length \code{n_users},
            ideology of each user
        \item \code{'zeta'}: Numeric vector of length \code{n_domains},
            ideology of each domain
    }
}
}
\description{
[TODO: EXTENDED HEADER]
}
\details{
[TODO: THIS IS THE DETAILS SECTION: FILL IN INFORMATION ON THE MODEL PARAMERS]
}
\examples{
simulated_data <- simulate_data() 

}
